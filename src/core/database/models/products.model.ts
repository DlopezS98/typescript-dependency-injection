/* eslint-disable camelcase */
export default interface IProducts {
  id: string;
  name: string;
  category: string;
  description?: string;
  created_at: Date;
  updated_at?: Date;
  deleted: boolean;
}

// Exclude the autogenerated properties
export type BaseProperties = Omit<
  IProducts,
  'id' | 'created_at' | 'deleted' | 'updated_at'
>;

export class Products implements IProducts {
  id!: string;
  name!: string;
  category!: string;
  description?: string | undefined;
  created_at!: Date;
  updated_at?: Date | undefined;
  deleted!: boolean;

  create(product: BaseProperties): Products {
    Object.assign(this, product);
    this.id = this.getId();
    this.created_at = new Date();
    this.deleted = false;

    return this;
  }

  setUpdatedDate(date?: Date): Products {
    this.updated_at = date ?? new Date();
    return this;
  }

  setDeleted(deleted?: boolean): Products {
    this.deleted = deleted ?? true;
    return this;
  }

  private getId(): string {
    const id = Math.floor(Math.random() * 100);
    return id.toString();
  }

  // clean unnecessary properties and return only the model properties of interface
  build(): IProducts {
    const { id, name, category, description, created_at, updated_at, deleted } = this;
    return { id, name, category, description, created_at, updated_at, deleted };
  }
}
